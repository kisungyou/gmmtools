% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reduction_2022Y.R
\name{gmr2022Y}
\alias{gmr2022Y}
\title{GMM Reduction by You (2022)}
\usage{
gmr2022Y(gmm, merger = c("moment", "wasserstein"))
}
\arguments{
\item{gmm}{a \code{gmmtools} object of \eqn{N} components.}

\item{merger}{the type of merging machinery, either \code{"moment"} or \code{"wasserstein"}.}
}
\value{
a \code{gmmtools} object of \eqn{M} components, where \eqn{M} is 
automatically selected via graph clustering algorithm.
}
\description{
Given a GMM model with \eqn{N} components for large \eqn{N},
model reduction is executed in a graph-theoretic way so that it involves 
no tuning parameters. For example, this function does not require a 
desired number of components for a compressed mixtures since it is automatically 
found from the data.
}
\examples{
# -------------------------------------------------------------
#              Reduction of Mixture for SMILEY Data
#
# From multiple SMILEY data, we fit 7-component GMM for each 
# data and average of models is taken to give a GMM fit with 
# large number of redundant components.
# -------------------------------------------------------------
# Generate 20 datasets with noise and fix GMM 
list_gmm  = list()
for (i in 1:20){
  data_i = T4cluster::genSMILEY(sd=0.25)$data
  list_gmm[[i]] = gmm(data_i, k=7)
}

# Find the average of models
gcenter = wsum(list_gmm)

# Do Reduction using Two Methods
grM = gmr2022Y(gcenter, merger="moment")
grW = gmr2022Y(gcenter, merger="wasserstein")

\dontrun{
# WARNING : RUN THIS PART FOR VISUALIZATION WITH GGPLOT2
# prepare grid and density evaluation
require("ggplot2")
npts  = 200
pgrid = as.matrix(expand.grid(x=seq(from=-1.5,to=1.5,length.out=npts),
                  y=seq(from=-1.5,to=1.5,length.out=npts)))
probM = gmmdensity(grM, data=pgrid)
probW = gmmdensity(grW, data=pgrid)
  
# wrap as a single dataframe
obj1 = rbind(cbind(pgrid, probM), cbind(pgrid, probW))
obj2 = as.factor(rep(c(1,2),each=(npts^2)))
odf  = data.frame(x=obj1[,1], y=obj1[,2], density=obj1[,3], class=obj2)
levels(odf$class) = c("moment","wasserstein")

# plot!
ggplot2::ggplot(odf, aes(x=x,y=y,z=density)) + 
  facet_grid(. ~ class) + 
  geom_raster(aes(fill=density)) + 
  geom_contour(colour="white") +
  scale_fill_viridis_c() +
  scale_x_continuous(expand = c(0, 0)) +
  scale_y_continuous(expand = c(0, 0)) +
  coord_fixed(xlim=c(-1.5,1.5), ylim=c(-1.5,1.5)) + 
  ggtitle("Reduction of 140-Component GMM via You (2022).")
}  

}
\concept{reduction}
