% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dissimilarity_L2.R
\name{dissL2}
\alias{dissL2}
\title{\eqn{L_2} Distance}
\usage{
dissL2(gmm1, gmm2)
}
\arguments{
\item{gmm1}{a \code{gmmtools} object.}

\item{gmm2}{a \code{gmmtools} object.}
}
\value{
computed distance value.
}
\description{
\eqn{L_2} distance between two measures \eqn{P} and \eqn{Q} with corresponding 
probability density functions \eqn{p(x)} and \eqn{q(x)} is defined as
\deqn{
D_{L_2}(P,Q) = \sqrt{\int \left(p(x)-q(x)\right)^2 dx}
}
which admits closed-form evaluation when \eqn{p(x)} (\code{gmmobj1}) and \eqn{q(x)} (\code{gmmobj2}) are two mixtures of Gaussians.
}
\examples{
\donttest{
# -------------------------------------------------------------
#                   Distance for Gaussian Mixtures
#
# Data 1 : use SMILEY data 'gensmiley()' function.
# Data 2 : SMILEY data is translated +3 and rotated.
# Data 3 : SMILEY data is translated +9 and rotated.
# -------------------------------------------------------------
## GENERATE DATA
#  set up
ndata = 10
ntot  = 3*ndata
rot   = qr.Q(qr(matrix(rnorm(4),ncol=2)))

#  generate
list_data = list()
for (i in 1:ndata){
  list_data[[i]]           = (T4cluster::genSMILEY(n=150, sd=0.1)$data)
  list_data[[i+ndata]]     = (T4cluster::genSMILEY(n=150, sd=0.1)$data)\%*\%rot + 3
  list_data[[i+(2*ndata)]] = (T4cluster::genSMILEY(n=150, sd=0.1)$data)\%*\%rot + 9
}

## FIT GMM MODELS WITH K=5 : Just Arbitrary Choice
list_gmm = list()
for (i in 1:ntot){
  list_gmm[[i]] = gmm(list_data[[i]], k=5)
}

## COMPUTE PAIRWISE DISTANCE
distL2 = array(0,c(ntot,ntot))
for (i in 1:(ntot-1)){
  gi = list_gmm[[i]]
  for (j in (i+1):ntot){
    gj = list_gmm[[j]]
    distL2[i,j] <- distL2[j,i] <- dissL2(gi, gj)
  }
}

## VISUALIZE
opar <- par(no.readonly=TRUE)
par(mfrow=c(1,2), pty="s")
plot(list_data[[1]], main="SMILEY data", pch=19)
image(distL2[,ntot:1], axes=FALSE, col=gray((0:64)/64),
      main="L2 Distance")
par(opar)
}

}
\concept{dissimilarity}
