// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_combine_medianL2
Rcpp::List cpp_combine_medianL2(Rcpp::List& gmmlist, arma::vec& vecpi, int maxiter, double abstol);
RcppExport SEXP _gmmtools_cpp_combine_medianL2(SEXP gmmlistSEXP, SEXP vecpiSEXP, SEXP maxiterSEXP, SEXP abstolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type gmmlist(gmmlistSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type vecpi(vecpiSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_combine_medianL2(gmmlist, vecpi, maxiter, abstol));
    return rcpp_result_gen;
END_RCPP
}
// cpp_combine_medianHD
Rcpp::List cpp_combine_medianHD(Rcpp::List& gmmlist, arma::vec& vecpi, int maxiter, double abstol, double theta);
RcppExport SEXP _gmmtools_cpp_combine_medianHD(SEXP gmmlistSEXP, SEXP vecpiSEXP, SEXP maxiterSEXP, SEXP abstolSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type gmmlist(gmmlistSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type vecpi(vecpiSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< double >::type abstol(abstolSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_combine_medianHD(gmmlist, vecpi, maxiter, abstol, theta));
    return rcpp_result_gen;
END_RCPP
}
// cpp_gmmdist_hd
double cpp_gmmdist_hd(arma::vec weight1, arma::mat mean1, arma::cube variance1, arma::vec weight2, arma::mat mean2, arma::cube variance2, double theta);
RcppExport SEXP _gmmtools_cpp_gmmdist_hd(SEXP weight1SEXP, SEXP mean1SEXP, SEXP variance1SEXP, SEXP weight2SEXP, SEXP mean2SEXP, SEXP variance2SEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type weight1(weight1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean1(mean1SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type variance1(variance1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weight2(weight2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean2(mean2SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type variance2(variance2SEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_gmmdist_hd(weight1, mean1, variance1, weight2, mean2, variance2, theta));
    return rcpp_result_gen;
END_RCPP
}
// cpp_gmmdist_l2
double cpp_gmmdist_l2(arma::vec weight1, arma::mat mean1, arma::cube variance1, arma::vec weight2, arma::mat mean2, arma::cube variance2);
RcppExport SEXP _gmmtools_cpp_gmmdist_l2(SEXP weight1SEXP, SEXP mean1SEXP, SEXP variance1SEXP, SEXP weight2SEXP, SEXP mean2SEXP, SEXP variance2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type weight1(weight1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean1(mean1SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type variance1(variance1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weight2(weight2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mean2(mean2SEXP);
    Rcpp::traits::input_parameter< arma::cube >::type variance2(variance2SEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_gmmdist_l2(weight1, mean1, variance1, weight2, mean2, variance2));
    return rcpp_result_gen;
END_RCPP
}
// gmm_skeleton
Rcpp::List gmm_skeleton(arma::mat& X, int k);
RcppExport SEXP _gmmtools_gmm_skeleton(SEXP XSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_skeleton(X, k));
    return rcpp_result_gen;
END_RCPP
}
// gmm_armadillo
Rcpp::List gmm_armadillo(arma::mat& X, int k, int maxiter, bool usediag);
RcppExport SEXP _gmmtools_gmm_armadillo(SEXP XSEXP, SEXP kSEXP, SEXP maxiterSEXP, SEXP usediagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< bool >::type usediag(usediagSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_armadillo(X, k, maxiter, usediag));
    return rcpp_result_gen;
END_RCPP
}
// gmm_11R
Rcpp::List gmm_11R(arma::mat& X, int K, double lambda, int maxiter, bool usediag);
RcppExport SEXP _gmmtools_gmm_11R(SEXP XSEXP, SEXP KSEXP, SEXP lambdaSEXP, SEXP maxiterSEXP, SEXP usediagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< bool >::type usediag(usediagSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_11R(X, K, lambda, maxiter, usediag));
    return rcpp_result_gen;
END_RCPP
}
// gmm_16Gfix
Rcpp::List gmm_16Gfix(arma::mat& X, int k, arma::vec weight, int maxiter, bool usediag);
RcppExport SEXP _gmmtools_gmm_16Gfix(SEXP XSEXP, SEXP kSEXP, SEXP weightSEXP, SEXP maxiterSEXP, SEXP usediagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< bool >::type usediag(usediagSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_16Gfix(X, k, weight, maxiter, usediag));
    return rcpp_result_gen;
END_RCPP
}
// cpp_collapse_MPM
Rcpp::List cpp_collapse_MPM(arma::vec& weight, arma::mat& mean, arma::cube& vars);
RcppExport SEXP _gmmtools_cpp_collapse_MPM(SEXP weightSEXP, SEXP meanSEXP, SEXP varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_collapse_MPM(weight, mean, vars));
    return rcpp_result_gen;
END_RCPP
}
// cpp_collapse_W2
Rcpp::List cpp_collapse_W2(arma::vec& weight, arma::mat& mean, arma::cube& vars);
RcppExport SEXP _gmmtools_cpp_collapse_W2(SEXP weightSEXP, SEXP meanSEXP, SEXP varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_collapse_W2(weight, mean, vars));
    return rcpp_result_gen;
END_RCPP
}
// cpp_reduction_1990S
Rcpp::List cpp_reduction_1990S(arma::vec& weight, arma::mat& mean, arma::cube& vars, int M);
RcppExport SEXP _gmmtools_cpp_reduction_1990S(SEXP weightSEXP, SEXP meanSEXP, SEXP varsSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_reduction_1990S(weight, mean, vars, M));
    return rcpp_result_gen;
END_RCPP
}
// cpp_reduction_2003W
Rcpp::List cpp_reduction_2003W(arma::vec& weight, arma::mat& mean, arma::cube& vars, int M);
RcppExport SEXP _gmmtools_cpp_reduction_2003W(SEXP weightSEXP, SEXP meanSEXP, SEXP varsSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_reduction_2003W(weight, mean, vars, M));
    return rcpp_result_gen;
END_RCPP
}
// cpp_reduction_2007R
Rcpp::List cpp_reduction_2007R(arma::vec& weight, arma::mat& mean, arma::cube& vars, int M);
RcppExport SEXP _gmmtools_cpp_reduction_2007R(SEXP weightSEXP, SEXP meanSEXP, SEXP varsSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    Rcpp::traits::input_parameter< int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_reduction_2007R(weight, mean, vars, M));
    return rcpp_result_gen;
END_RCPP
}
// gmm_density
arma::vec gmm_density(arma::mat& coords, arma::vec& weight, arma::mat& mean, arma::cube& variance);
RcppExport SEXP _gmmtools_gmm_density(SEXP coordsSEXP, SEXP weightSEXP, SEXP meanSEXP, SEXP varianceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type coords(coordsSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mean(meanSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type variance(varianceSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_density(coords, weight, mean, variance));
    return rcpp_result_gen;
END_RCPP
}
// gmm_sample
arma::mat gmm_sample(int n, arma::colvec oldweight, arma::mat oldmeans, arma::cube oldcovs);
RcppExport SEXP _gmmtools_gmm_sample(SEXP nSEXP, SEXP oldweightSEXP, SEXP oldmeansSEXP, SEXP oldcovsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type oldweight(oldweightSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type oldmeans(oldmeansSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type oldcovs(oldcovsSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_sample(n, oldweight, oldmeans, oldcovs));
    return rcpp_result_gen;
END_RCPP
}
// gmm_compdist_W2
arma::mat gmm_compdist_W2(arma::mat& means, arma::cube& vars);
RcppExport SEXP _gmmtools_gmm_compdist_W2(SEXP meansSEXP, SEXP varsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type means(meansSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type vars(varsSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_compdist_W2(means, vars));
    return rcpp_result_gen;
END_RCPP
}
// eval_label
arma::uvec eval_label(arma::mat& X, arma::mat parMU, arma::cube parSIG, arma::vec parPI);
RcppExport SEXP _gmmtools_eval_label(SEXP XSEXP, SEXP parMUSEXP, SEXP parSIGSEXP, SEXP parPISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type parMU(parMUSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type parSIG(parSIGSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type parPI(parPISEXP);
    rcpp_result_gen = Rcpp::wrap(eval_label(X, parMU, parSIG, parPI));
    return rcpp_result_gen;
END_RCPP
}
// eval_gaussian_single
double eval_gaussian_single(arma::rowvec x, arma::rowvec mu, arma::mat sig, bool logreturn);
RcppExport SEXP _gmmtools_eval_gaussian_single(SEXP xSEXP, SEXP muSEXP, SEXP sigSEXP, SEXP logreturnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::rowvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sig(sigSEXP);
    Rcpp::traits::input_parameter< bool >::type logreturn(logreturnSEXP);
    rcpp_result_gen = Rcpp::wrap(eval_gaussian_single(x, mu, sig, logreturn));
    return rcpp_result_gen;
END_RCPP
}
// gauss_rmvnorm
arma::mat gauss_rmvnorm(int N, arma::vec mu, arma::mat var);
RcppExport SEXP _gmmtools_gauss_rmvnorm(SEXP NSEXP, SEXP muSEXP, SEXP varSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type var(varSEXP);
    rcpp_result_gen = Rcpp::wrap(gauss_rmvnorm(N, mu, var));
    return rcpp_result_gen;
END_RCPP
}
// gmm_together
Rcpp::List gmm_together(Rcpp::List& gmmlist, arma::vec& weight);
RcppExport SEXP _gmmtools_gmm_together(SEXP gmmlistSEXP, SEXP weightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List& >::type gmmlist(gmmlistSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type weight(weightSEXP);
    rcpp_result_gen = Rcpp::wrap(gmm_together(gmmlist, weight));
    return rcpp_result_gen;
END_RCPP
}
// cpp_setdiff
arma::uvec cpp_setdiff(arma::uvec& x, arma::uvec& y);
RcppExport SEXP _gmmtools_cpp_setdiff(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_setdiff(x, y));
    return rcpp_result_gen;
END_RCPP
}
// label_kmeans
arma::urowvec label_kmeans(arma::mat data, int K, int maxiter);
RcppExport SEXP _gmmtools_label_kmeans(SEXP dataSEXP, SEXP KSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(label_kmeans(data, K, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// label_gmm
arma::urowvec label_gmm(arma::mat data, int K, int maxiter);
RcppExport SEXP _gmmtools_label_gmm(SEXP dataSEXP, SEXP KSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(label_gmm(data, K, maxiter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gmmtools_cpp_combine_medianL2", (DL_FUNC) &_gmmtools_cpp_combine_medianL2, 4},
    {"_gmmtools_cpp_combine_medianHD", (DL_FUNC) &_gmmtools_cpp_combine_medianHD, 5},
    {"_gmmtools_cpp_gmmdist_hd", (DL_FUNC) &_gmmtools_cpp_gmmdist_hd, 7},
    {"_gmmtools_cpp_gmmdist_l2", (DL_FUNC) &_gmmtools_cpp_gmmdist_l2, 6},
    {"_gmmtools_gmm_skeleton", (DL_FUNC) &_gmmtools_gmm_skeleton, 2},
    {"_gmmtools_gmm_armadillo", (DL_FUNC) &_gmmtools_gmm_armadillo, 4},
    {"_gmmtools_gmm_11R", (DL_FUNC) &_gmmtools_gmm_11R, 5},
    {"_gmmtools_gmm_16Gfix", (DL_FUNC) &_gmmtools_gmm_16Gfix, 5},
    {"_gmmtools_cpp_collapse_MPM", (DL_FUNC) &_gmmtools_cpp_collapse_MPM, 3},
    {"_gmmtools_cpp_collapse_W2", (DL_FUNC) &_gmmtools_cpp_collapse_W2, 3},
    {"_gmmtools_cpp_reduction_1990S", (DL_FUNC) &_gmmtools_cpp_reduction_1990S, 4},
    {"_gmmtools_cpp_reduction_2003W", (DL_FUNC) &_gmmtools_cpp_reduction_2003W, 4},
    {"_gmmtools_cpp_reduction_2007R", (DL_FUNC) &_gmmtools_cpp_reduction_2007R, 4},
    {"_gmmtools_gmm_density", (DL_FUNC) &_gmmtools_gmm_density, 4},
    {"_gmmtools_gmm_sample", (DL_FUNC) &_gmmtools_gmm_sample, 4},
    {"_gmmtools_gmm_compdist_W2", (DL_FUNC) &_gmmtools_gmm_compdist_W2, 2},
    {"_gmmtools_eval_label", (DL_FUNC) &_gmmtools_eval_label, 4},
    {"_gmmtools_eval_gaussian_single", (DL_FUNC) &_gmmtools_eval_gaussian_single, 4},
    {"_gmmtools_gauss_rmvnorm", (DL_FUNC) &_gmmtools_gauss_rmvnorm, 3},
    {"_gmmtools_gmm_together", (DL_FUNC) &_gmmtools_gmm_together, 2},
    {"_gmmtools_cpp_setdiff", (DL_FUNC) &_gmmtools_cpp_setdiff, 2},
    {"_gmmtools_label_kmeans", (DL_FUNC) &_gmmtools_label_kmeans, 3},
    {"_gmmtools_label_gmm", (DL_FUNC) &_gmmtools_label_gmm, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_gmmtools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
